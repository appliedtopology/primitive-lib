package $packageName;

import java.util.Iterator;

#set ($type = $templateTypes.get(0))
#set ($className = $utility.getAnnotatedClassName("SparseVector", $templateTypes, $genericTypes))
#set ($superName = $utility.getAnnotatedClassName("AbstractVector", $templateTypes, $genericTypes))
#set ($basicName = $utility.getClassName("SparseVector", $templateTypes, $genericTypes))
#set ($pairClassName = $utility.getAnnotatedClassName("VectorEntry", $templateTypes, $genericTypes))
#set ($iteratorClassName = $utility.getAnnotatedClassName("SparseVectorIterator", $templateTypes, $genericTypes))
#set ($basicIteratorClassName = $utility.getClassName("SparseVectorIterator", $templateTypes, $genericTypes))
#set ($mapType = $utility.getMapType("int", $type) + $utility.getGenericAnnotation(["int", $type], []))
#set ($iteratorType = $utility.getMapIteratorType("int", $type) + $utility.getGenericAnnotation(["int", $type], []))

#if ($type == "boolean")

#include("templates/matrix/boolean/BooleanSparseVectorIterator.java");
#stop

#end

public class $iteratorClassName implements Iterator<$pairClassName> {
	private final $iteratorType iterator;
	
	public $basicIteratorClassName($className vector) {
		this.iterator = vector.map.iterator();
	}
	
	public boolean hasNext() {
		return this.iterator.hasNext();
	}

	public $pairClassName next() {
		this.iterator.advance();
		return new $pairClassName(this.iterator.key(), this.iterator.value());
	}

	public void remove() {
		this.iterator.remove();
	}
}